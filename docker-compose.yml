version: '3'

services:
    mongo:
        container_name: mongo
        image: mongo:latest
        volumes:
            - ./data/mongo:/data/db
        user: "${UID_GID}"
        ports:
            - "27017:27017"
        networks:
            - common
        restart: always

    mysql:
        container_name: mysql
        image: mysql:8.0
        volumes:
            - ./data/mysql:/var/lib/mysql
        user: "${UID_GID}"
        ports:
            - "3306:3306"
        environment:
            MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
        networks:
            - common
        restart: always

    postgresql:
        container_name: postgresql
        image: postgres:alpine
        volumes:
            #  You need to create data/postgresql/pgdata folder manually or this will error
            - ./data/postgresql/pgdata:/var/lib/postgresql/data
            # Need to mound passwd to use user option
            - /etc/passwd:/etc/passwd:ro
            # If you want to create multiple database, mount this folder
            # - ./config/postgresql/init_script:/docker-entrypoint-initdb.d
        user: "${UID_GID}"
        ports:
            - "5432:5432"
        environment:
            - POSTGRES_USER=someuser
            - POSTGRES_PASSWORD=somepassword
            # - POSTGRES_DB=default
            # If you want to create multiple database, uncomment this line
            # - POSTGRES_MULTIPLE_DATABASES=db1,db2,db3
        networks:
            - common
        restart: always

    neo4j:
        container_name: neo4j
        image: neo4j
        volumes:
            - ./data/neo4j:/data
        user: "${UID_GID}"
        ports:
            - "7474:7474"
            - "7687:7687"
        # environment:
        #     - NEO4J_AUTH=none
        networks:
            - common
        restart: always

    redis:
        container_name: redis
        image: redis:alpine
        command: ["redis-server", "--appendonly", "yes"]
        volumes:
            - ./data/redis:/data
        user: "${UID_GID}"
        ports:
            - "6379:6379"
        networks:
            - common
        restart: always

    rabbitmq:
        container_name: rabbitmq
        image: rabbitmq:management-alpine
        volumes:
            - ./data/rabbitmq:/var/lib/rabbitmq
        user: "${UID_GID}"
        ports:
            - "15672:15672"
            - "5672:5672"
        # environment:
        #     - RABBITMQ_DEFAULT_USER=admin
        #     - RABBITMQ_DEFAULT_PASS=password
        #     - RABBITMQ_DEFAULT_VHOST=myvhost
        networks:
            - common
        restart: always

networks:
    common: